name: Build and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [created]

jobs:
  build-and-deploy:
    runs-on: ${{ matrix.platform }}

    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.19]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build for ${{ matrix.platform }}
        run: |
          if [[ "${{ matrix.platform }}" == "ubuntu-latest" ]]; then
            go build -o alterix-linux ./...
          elif [[ "${{ matrix.platform }}" == "macos-latest" ]]; then
            go build -o alterix-macos ./...
          else
            go build -o alterix-windows.exe ./...
          fi

      - name: Test
        run: echo "No tests to run."

      - name: Upload Assets
        if: ${{ github.event_name == 'release' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: |
            if [[ "${{ matrix.platform }}" == "ubuntu-latest" ]]; then
              ./alterix-linux
            elif [[ "${{ matrix.platform }}" == "macos-latest" ]]; then
              ./alterix-macos
            else
              ./alterix-windows.exe
            fi
          asset_name: |
            if [[ "${{ matrix.platform }}" == "ubuntu-latest" ]]; then
              alterix-linux
            elif [[ "${{ matrix.platform }}" == "macos-latest" ]]; then
              alterix-macos
            else
              alterix-windows.exe
            fi
          asset_content_type: application/octet-stream